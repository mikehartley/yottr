<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2014. Mike Hartley Solutions Ltd
  ~ All rights reserved.
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
			            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Configuring RoleVoter bean to use custom access roles, by default roles should be in the form ROLE_{XXX} -->
	<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
		<beans:property name="rolePrefix" value=""></beans:property>
	</beans:bean>

	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg name="decisionVoters" ref="roleVoter" />
	</beans:bean>

	<http authentication-manager-ref="dao-auth" access-decision-manager-ref="accessDecisionManager">
        <intercept-url pattern="/s/**" access="FREE" />
        <intercept-url pattern="/admin/**" access="ADMIN" />
		<form-login login-page="/login.htm" authentication-failure-url="/denied.htm"
			username-parameter="username" password-parameter="password" default-target-url="/index.htm" />
		<logout invalidate-session="true" logout-success-url="/logout.htm" logout-url="/j_spring_security_logout" />
		<access-denied-handler error-page="/denied.htm"/>
		<session-management invalid-session-url="/login.htm">
			<concurrency-control max-sessions="1" expired-url="/login.htm" />
		</session-management>
	</http>

	<!--<authentication-manager id="in-memory-auth">-->
		<!--<authentication-provider>-->
			<!--<user-service>-->
				<!--<user name="mike" password="mike123" authorities="Admin" />-->
			<!--</user-service>-->
		<!--</authentication-provider>-->
	<!--</authentication-manager>-->

	<authentication-manager id="dao-auth">
		<authentication-provider user-service-ref="userDetailsService"/>
	</authentication-manager>

	<!--<beans:bean id="userDetailsService" class="uk.co.yottr.security.dao.AppUserDetailsServiceDAO" />-->

	<!--<authentication-manager id="jdbc-auth">-->
		<!--<authentication-provider>-->
			<!--<jdbc-user-service data-source-ref="dataSource"-->
				<!--users-by-username-query="select username,password,enabled from Employees where username = ?"-->
				<!--authorities-by-username-query="select username,role from Roles where username = ?" />-->
		<!--</authentication-provider>-->
	<!--</authentication-manager>-->

	<!-- MySQL DB DataSource -->
	<!--<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->

		<!--&lt;!&ndash;<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />&ndash;&gt;-->
		<!--&lt;!&ndash;<beans:property name="url"&ndash;&gt;-->
			<!--&lt;!&ndash;value="jdbc:mysql://localhost:3306/TestDB" />&ndash;&gt;-->
		<!--&lt;!&ndash;<beans:property name="username" value="mike" />&ndash;&gt;-->
		<!--&lt;!&ndash;<beans:property name="password" value="mike123" />&ndash;&gt;-->

        <!--<beans:property name="driverClassName" value="org.postgresql.Driver" />-->
        <!--<beans:property name="url" value="jdbc:postgresql://localhost:5432/TestDB" />-->
        <!--<beans:property name="username" value="postgres" />-->
        <!--<beans:property name="password" value="postgres" />-->
	<!--</beans:bean>-->

	<!-- If DataSource is configured in Tomcat Servlet Container -->
	<!--<beans:bean id="dbDataSource"-->
		<!--class="org.springframework.jndi.JndiObjectFactoryBean">-->
		<!--<beans:property name="jndiName" value="java:comp/env/jdbc/MyLocalDB" />-->
	<!--</beans:bean>-->
</beans:beans>
